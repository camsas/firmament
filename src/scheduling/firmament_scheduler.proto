// The Firmament project
// Copyright (c) The Firmament Authors.

syntax = "proto3";

package firmament;

import "base/job_desc.proto";
import "base/resource_stats.proto";
import "base/resource_topology_node_desc.proto";
import "base/task_desc.proto";
import "base/task_stats.proto";
import "scheduling/scheduling_delta.proto";

service FirmamentScheduler {
  rpc Schedule (ScheduleRequest) returns (SchedulingDeltas) {}

  rpc TaskCompleted (TaskUID) returns (TaskCompletedResponse) {}
  rpc TaskFailed (TaskUID) returns (TaskFailedResponse) {}
  rpc TaskRemoved (TaskUID) returns (TaskRemovedResponse) {}
  rpc TaskSubmitted (TaskDescription) returns (TaskSubmittedResponse) {}
  rpc TaskUpdated (TaskDescription) returns (TaskUpdatedResponse) {}

  rpc NodeAdded (ResourceTopologyNodeDescriptor) returns (NodeAddedResponse) {}
  rpc NodeFailed (ResourceUID) returns (NodeFailedResponse) {}
  rpc NodeRemoved (ResourceUID) returns (NodeRemovedResponse) {}
  rpc NodeUpdated (ResourceTopologyNodeDescriptor) returns (NodeUpdatedResponse) {}

  rpc AddTaskStats (TaskStats) returns (TaskStatsResponse) {}
  rpc AddNodeStats (ResourceStats) returns (ResourceStatsResponse) {}
}

message ScheduleRequest {}

message SchedulingDeltas {
  repeated SchedulingDelta deltas = 1;
}

message TaskCompletedResponse {
  TaskReplyType type = 1;
}

message TaskDescription {
  TaskDescriptor task_descriptor = 1;
  JobDescriptor job_descriptor = 2;
}

message TaskSubmittedResponse {
  TaskReplyType type = 1;
}

message TaskRemovedResponse {
  TaskReplyType type = 1;
}

message TaskFailedResponse {
  TaskReplyType type = 1;
}

message TaskUpdatedResponse {
  TaskReplyType type = 1;
}

message NodeAddedResponse {
  NodeReplyType type = 1;
}

message NodeRemovedResponse {
  NodeReplyType type = 1;
}

message NodeFailedResponse {
  NodeReplyType type = 1;
}

message NodeUpdatedResponse {
  NodeReplyType type = 1;
}

message TaskStatsResponse {
  TaskReplyType type = 1;
}

message ResourceStatsResponse {
  NodeReplyType type = 1;
}

message TaskUID {
  uint64 task_uid = 1;
}

message ResourceUID {
  string resource_uid = 1;
}

enum TaskReplyType {
  TASK_COMPLETED_OK = 0;
  TASK_SUBMITTED_OK = 1;
  TASK_REMOVED_OK = 2;
  TASK_FAILED_OK = 3;
  TASK_UPDATED_OK = 4;
  TASK_NOT_FOUND = 5;
  TASK_JOB_NOT_FOUND = 6;
  TASK_ALREADY_SUBMITTED = 7;
  TASK_STATE_NOT_CREATED = 8;
}

enum NodeReplyType {
  NODE_ADDED_OK = 0;
  NODE_FAILED_OK = 1;
  NODE_REMOVED_OK = 2;
  NODE_UPDATED_OK = 3;
  NODE_NOT_FOUND = 4;
  NODE_ALREADY_EXISTS = 5;
}
